@charset "utf-8";

/*************************************************************
 * Styles for specific buttons usage
 * These styles are based on the slate bulmaswatch theme and borrow variables from there
**************************************************************
*/

/*************************************************************
 * (Track) Button layout
**************************************************************
*/

/* Multiline buttons (use <br/> in a button text to force multiline) */
.button.is-multiline {
    min-height: 2.25em;
    white-space: unset;
    height: auto;
    flex-direction: column;
}

/*************************************************************
 * Support for button block layout (use by adding "has-gap")
 * Aligns all the buttons nicely when placed within a "block" 
 * layout with flex-grow (e.g. the cues button field)
 * Fixes the otherwise unequal gaps of right-edge buttons in a group.
 * 
 * Note: the gap CSS feature is not supported on all devices,
 * notably not on older iOS devices with Safari below 14.1
 * Thus, the gap feature is tested beforehand
**************************************************************
*/

// NOTE: @supports ((gap: 10px) and (display: flex)) seems not to work as
// the gap for flex and the gap for grid are not distinguishable from their name
// See: https://ppuzio.medium.com/flexbox-gap-workaround-for-safari-on-ios-14-13-and-lower-ffcae589eb69
@supports not ((-webkit-touch-callout: none) and (not (translate: none))) {
    /* First, for a gapped buttons group,  
     * remove the original bulma margin from the grouped buttons */
    .buttons.has-gap .button {
        margin-bottom: 0;
    }
    .buttons.has-gap .button:not(:last-child):not(.is-fullwidth) {
        margin-right: 0;
    }
    .buttons.has-gap:last-child {
        margin-bottom: 0;
    }

    /* Then, instead of the margin, add a consistent gap 
     * of the same size between the grouped buttons
     */
    .buttons.buttons.has-gap {
        gap: 0.5rem;
    }
}

/*************************************************************
 * Disabled buttons should have no background or border
 **************************************************************
*/
.button[disabled],
fieldset[disabled] .button,
.button[disabled]:hover,
fieldset[disabled] .button:hover {
    background-color: transparent;
    border-color: transparent;
    box-shadow: none;
}

/*************************************************************
 * Support for button icon rotations
 **************************************************************
*/

.button .icon.rotate {
    -moz-transition: all 0.3s linear;
    -webkit-transition: all 0.3s linear;
    transition: all 0.3s linear;

    &.right {
        -ms-transform: rotate(-90deg);
        -moz-transform: rotate(-90deg);
        -webkit-transform: rotate(-90deg);
        transform: rotate(-90deg);
    }

    &.up {
        -ms-transform: rotate(-180deg);
        -moz-transform: rotate(-180deg);
        -webkit-transform: rotate(-180deg);
        transform: rotate(-180deg);
    }

    &.down {
        -ms-transform: rotate(0deg);
        -moz-transform: rotate(0deg);
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
}

/*************************************************************
 * Unfortunately, the existing focus style is different for colored buttons
   However, for Replayer, colored buttons should have the same 
   focus styles as all the other buttons.
   Thus, this style is set here for them all the same   
**************************************************************/

/* focus */
.button:focus,
.button.is-primary:focus,
.button.is-link:focus,
.button.is-info:focus,
.button.is-success:focus,
.button.is-warning:focus,
.button.is-danger:focus,

/* is-focused */
.button.is-focused,
.button.is-primary.is-focused ,
.button.is-link.is-focused ,
.button.is-info.is-focused ,
.button.is-success.is-focused ,
.button.is-warning.is-focused ,
.button.is-danger.is-focused {
    border-color: $grey-lightest;
    color: $grey-lightest;
}

/* focus */
.button:focus:not(:active),
.button.is-primary:focus:not(:active),
.button.is-link:focus:not(:active),
.button.is-info:focus:not(:active),
.button.is-success:focus:not(:active),
.button.is-warning:focus:not(:active),
.button.is-danger:focus:not(:active),

/* is-focused */
.button.is-focused:not(:active),
.button.is-primary.is-focused:not(:active) ,
.button.is-link.is-focused:not(:active) ,
.button.is-info.is-focused:not(:active) ,
.button.is-success.is-focused:not(:active) ,
.button.is-warning.is-focused:not(:active) ,
.button.is-danger.is-focused:not(:active) {
    box-shadow: 0 0 0 0.125em rgb(250 250 250 / 25%);
}

/*************************************************************
 * "Virtual" Buttons for "placeholder-leading cues"
**************************************************************/

/** A virtual button should also have the default appearance (including similar brightness) except the coloring */
.button.is-virtual {
    filter: grayscale(100%) !important;
}

/*************************************************************
 * "inactive" Buttons for actionable items
**************************************************************/

/** Buttons in inactive state should present themselves as actionable but deactivated */
.button.is-danger.is-inactive:not(.is-outlined):not(.is-inverted) 
{
    background-image: none;
    background-color: transparent;
    border-color: #ee5f5b;
    color: $grey-lightest;
}
.button.is-danger.is-inactive:not(.is-outlined):not(.is-inverted):hover {
    background-image: linear-gradient(
        180deg,
        rgba(234, 59, 54, 0.25) 0%,
        rgba(236, 77, 73, 0.25) 40%,
        rgb(238, 95, 91, 0.25) 100%
    );
    filter: none;
    text-shadow: 1px 1px 1px rgb(10 10 10 / 30%);
}

.button.is-warning.is-inactive:not(.is-outlined):not(.is-inverted) 
{
    background-image: none;
    background-color: transparent;
    border-color: #f89406;
    color: $grey-lightest;
}
.button.is-warning.is-inactive:not(.is-outlined):not(.is-inverted):hover {
    background-image: linear-gradient(
        180deg,
        rgba(250, 161, 35, 0.25) 0%,
        rgb(248, 148, 6, 0.25) 40%,
        rgb(228 ,136, 6, 0.25) 100%
    );
    filter: none;
    text-shadow: 1px 1px 1px rgb(10 10 10 / 30%);
}


 
